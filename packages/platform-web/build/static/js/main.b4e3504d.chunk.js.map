{"version":3,"sources":["components/Login/LoginBackground.tsx","redux/actions/settings.ts","utils/styles.ts","components/Login/Login.tsx","components/Portal/Portal.tsx","components/App/AppRouter.tsx","redux/actions/snackbar.ts","components/App/AppSnackbar.tsx","components/Settings/Settings.tsx","utils/network.ts","components/App/App.tsx","utils/theme.ts","redux/store.ts","index.tsx"],"names":["LoginBackground","width","height","viewBox","fill","xmlns","opacity","d","snackbarSlice","createSlice","name","initialState","show","reducers","showSettings","state","hideSettings","actions","commonStyles","blackButton","background","useStyles","makeStyles","loginButton","marginTop","Login","classes","dispatch","useDispatch","className","Grid","container","item","xs","sm","md","lg","xl","Tooltip","title","IconButton","onClick","Settings","Button","color","variant","size","startIcon","Power","Typography","display","gutterBottom","Portal","AppRouter","path","exact","render","to","message","severity","showSnack","action","payload","hideSnack","AppSnackbar","snackbar","useSelector","Snackbar","open","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","icon","customDialog","position","top","useState","network","localStorage","getItem","getNetwork","setNetwork","settings","Dialog","fullWidth","maxWidth","paper","DialogTitle","style","justifyContent","paddingTop","Close","DialogContent","FormControl","component","FormLabel","RadioGroup","row","value","onChange","ev","target","setItem","FormControlLabel","control","Radio","label","DialogActions","App","theme","createTheme","typography","button","textTransform","fontFamily","palette","primary","main","secondary","store","configureStore","reducer","snackbarReducer","settingsReducer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b4e3504d.chunk.js","sourcesContent":["function LoginBackground(): JSX.Element {\n    return (<div>\n        <svg width=\"661\" height=\"573\" viewBox=\"0 0 661 573\" fill=\"none\"\n             xmlns=\"http://www.w3.org/2000/svg\">\n            <path opacity=\"0.5\" d=\"M301.972 460.59H459.711L374.445 553H217.555L301.972 460.59Z\"\n                  fill=\"#EFF1FF\"></path>\n            <path opacity=\"0.4\"\n                  d=\"M585.269 95.2073H660.886L620.011 140.163H544.801L585.269 95.2073Z\"\n                  fill=\"#EBEEFF\"></path>\n            <path opacity=\"0.5\"\n                  d=\"M90.1233 373.915H177.864L130.436 426.012H43.1665L90.1233 373.915Z\"\n                  fill=\"#F4F6FF\"></path>\n            <path opacity=\"0.7\" d=\"M245.223 357.66H464.593L346.012 485.785H127.822L245.223 357.66Z\"\n                  fill=\"#EBEEFF\"></path>\n            <path opacity=\"0.6\" d=\"M532.162 232.02H654.938L588.571 304.449H466.456L532.162 232.02Z\"\n                  fill=\"#EFF1FF\"></path>\n            <path opacity=\"0.5\" d=\"M536.924 369.634H612.541L571.666 414.59H496.456L536.924 369.634Z\"\n                  fill=\"#F4F6FF\"></path>\n            <path opacity=\"0.4\" d=\"M113.243 107.654H188.86L147.985 152.61H72.7747L113.243 107.654Z\"\n                  fill=\"#EBEEFF\"></path>\n            <path opacity=\"0.5\" d=\"M330.845 158.854H477.2L398.087 245.02H252.519L330.845 158.854Z\"\n                  fill=\"#F4F6FF\"></path>\n            <path opacity=\"0.5\" d=\"M508.327 0H636L566.986 75H440L508.327 0Z\" fill=\"#F4F6FF\"></path>\n            <path opacity=\"0.5\" d=\"M64.4925 502H185L119.859 573H0L64.4925 502Z\"\n                  fill=\"#F4F6FF\"></path>\n            <path opacity=\"0.7\"\n                  d=\"M602.805 205.808H152.133L33.6135 333.933H484.286L602.805 205.808Z\"\n                  fill=\"#EBEEFF\"></path>\n            <path opacity=\"0.7\"\n                  d=\"M293.465 53.9561H512.026L393.989 182.081H175.254L293.465 53.9561Z\"\n                  fill=\"#E6EAFF\"></path>\n            <path opacity=\"0.43\" d=\"M273.266 9H374.089L319.589 67.6927H219.309L273.266 9Z\"\n                  fill=\"#F4F6FF\"></path>\n        </svg>\n    </div>);\n}\n\nexport default LoginBackground;","import { createSlice } from '@reduxjs/toolkit'\n\n\nexport interface Settings {\n    show: boolean\n}\n\nconst initialState: Settings = {\n    show: false\n}\n\nexport const snackbarSlice = createSlice({\n    name: 'snackbar',\n    initialState,\n    reducers: {\n        showSettings: (state ) => {\n            state.show = true;\n        },\n        hideSettings: (state) => {\n            state.show = false;\n        }\n    },\n});\n\nexport const { showSettings, hideSettings } = snackbarSlice.actions\nexport default snackbarSlice.reducer","export const commonStyles = {\n    blackButton: {\n        background: '#000',\n        '&:hover': {\n            background: '#000 !important',\n        },\n        '&:focus': {\n            background: '#000 !important',\n        }\n    }\n};","import './Login.scss';\nimport {Button, Grid, IconButton, makeStyles, Tooltip, Typography} from \"@material-ui/core\";\nimport LoginBackground from \"./LoginBackground\";\nimport {Power, Settings} from \"@material-ui/icons\";\nimport {showSettings} from '../../redux/actions/settings';\nimport {useDispatch} from \"react-redux\";\nimport {commonStyles} from \"../../utils/styles\";\n\nconst useStyles = makeStyles({\n    ...commonStyles,\n    loginButton: {\n        marginTop: 15,\n    }\n});\n\n\nfunction Login(): JSX.Element {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n  return (\n      <div className=\"login-wrapper\">\n          <div className=\"login-container\">\n              <Grid container>\n                  <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n                      <div className=\"left-section\">\n                        <LoginBackground></LoginBackground>\n                      </div>\n                  </Grid>\n                  <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n                      <div className=\"right-section\">\n                          <div>\n                              <Tooltip title=\"Settings\">\n                                  <IconButton\n                                      className=\"settings-button\"\n                                      onClick={() => {\n                                          dispatch(showSettings());\n                                      }}>\n                                      <Settings></Settings>\n                                  </IconButton>\n                              </Tooltip>\n                          </div>\n                          <div className=\"logo\">\n                              Algodesk.io\n                          </div>\n                          <div>\n                              <Button\n                                  color={\"primary\"}\n                                  variant={\"contained\"}\n                                  size={\"large\"}\n                                  className={classes.loginButton + ' ' + classes.blackButton}\n                                  startIcon={<Power></Power>}\n                                  onClick={() => {\n                                  }}\n                              >Connect Wallet</Button>\n                          </div>\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom color=\"textSecondary\">\n                              Powered by algorand\n                          </Typography>\n                      </div>\n                  </Grid>\n              </Grid>\n          </div>\n      </div>\n  );\n}\n\nexport default Login;\n","import './Portal.scss';\n\nfunction Portal(): JSX.Element {\n\n  return (\n      <div className=\"portal-wrapper\">\n          <div className=\"portal-container\">\n            portal\n          </div>\n      </div>\n  );\n}\n\nexport default Portal;\n","import {Redirect, Route, Switch} from \"react-router-dom\";\nimport Login from \"../Login/Login\";\nimport Portal from \"../Portal/Portal\";\nimport React from \"react\";\n\nfunction AppRouter(): JSX.Element {\n    return (<div>\n        <Switch>\n            <Route path=\"/login\">\n                <Login></Login>\n            </Route>\n            <Route path=\"/portal\">\n                <Portal></Portal>\n            </Route>\n            <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\n            <Route render={() => <Redirect to=\"/\" />} />\n        </Switch>\n    </div>);\n}\n\nexport default AppRouter;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {Color} from \"@material-ui/lab\";\n\nexport interface Snackbar {\n    show: boolean,\n    message: string,\n    severity: Color\n}\n\nconst initialState: Snackbar = {\n    show: false,\n    message: '',\n    severity: 'info'\n}\n\nexport const snackbarSlice = createSlice({\n    name: 'snackbar',\n    initialState,\n    reducers: {\n        showSnack: (state, action: PayloadAction<any>) => {\n            state.show = true;\n            state.message = action.payload.message;\n            state.severity = action.payload.severity;\n        },\n        hideSnack: (state) => {\n            state.show = false;\n            state.message = '';\n        }\n    },\n});\n\nexport const { showSnack, hideSnack } = snackbarSlice.actions\nexport default snackbarSlice.reducer","import {Snackbar} from \"@material-ui/core\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../redux/store\";\nimport {hideSnack} from '../../redux/actions/snackbar';\nimport Alert from \"@material-ui/lab/Alert\";\n\nfunction AppSnackbar(): JSX.Element {\n    const snackbar = useSelector((state: RootState) => state.snackbar)\n    const dispatch = useDispatch();\n\n    return (<Snackbar\n        open={snackbar.show}\n        anchorOrigin={{ vertical: 'top',\n            horizontal: 'center' }}\n        autoHideDuration={5000} onClose={() => {dispatch(hideSnack())}}>\n        <Alert\n            icon={false}\n            severity={snackbar.severity}\n            onClose={() => {dispatch(hideSnack())}}>\n            {snackbar.message}\n        </Alert>\n    </Snackbar>);\n}\n\nexport default AppSnackbar;\n","import './Settings.scss';\nimport {FormControl, FormControlLabel, FormLabel, makeStyles, Radio, RadioGroup} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {getNetwork, setNetwork as selectNetwork} from \"../../utils/network\";\nimport {RootState} from \"../../redux/store\";\nimport {hideSettings} from \"../../redux/actions/settings\";\nimport {Dialog, DialogActions, DialogContent, DialogTitle, IconButton} from \"@material-ui/core\";\nimport {Close} from '@material-ui/icons';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {commonStyles} from \"../../utils/styles\";\n\nconst useStyles = makeStyles({\n    ...commonStyles,\n    customDialog: {\n        position: \"absolute\",\n        top: 100\n    }\n});\n\nfunction Settings(): JSX.Element {\n    const [network, setNetwork] = useState(getNetwork());\n\n    const settings = useSelector((state: RootState) => state.settings);\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    return (<div>\n        {settings.show ? <Dialog\n            fullWidth={true}\n            maxWidth={\"xs\"}\n            open={settings.show}\n            classes={{\n                paper: classes.customDialog\n            }}\n        >\n            <DialogTitle >\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                    <div style={{paddingTop: 7}}>Settings</div>\n                    <IconButton color=\"default\" onClick={() => {\n                        dispatch(hideSettings())\n                    }}>\n                        <Close />\n                    </IconButton>\n                </div>\n            </DialogTitle>\n            <DialogContent>\n                <div className=\"settings-wrapper\">\n                    <div className=\"settings-container\">\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Select network</FormLabel>\n                            <RadioGroup row value={network} onChange={(ev) => {\n                                const network = ev.target.value;\n                                setNetwork(network);\n                                selectNetwork(network);\n                            }}>\n                                <FormControlLabel value=\"testnet\" control={<Radio color=\"primary\"/>} label=\"TestNet\" />\n                                <FormControlLabel value=\"betanet\" control={<Radio color=\"primary\"/>} label=\"BetaNet\" />\n                                <FormControlLabel value=\"mainnet\" control={<Radio color=\"primary\"/>} label=\"MainNet\" />\n                            </RadioGroup>\n                        </FormControl>\n                    </div>\n                </div>\n            </DialogContent>\n            <DialogActions>\n            </DialogActions>\n        </Dialog> : ''}\n    </div>);\n}\n\nexport default Settings;\n","export function getNetwork(): string {\n    let network = localStorage.getItem(\"network\");\n    if (!network) {\n        network = \"mainnet\";\n    }\n    return network;\n}\n\nexport function setNetwork(name: string): void {\n    localStorage.setItem(\"network\", name);\n}\n\n","import React from 'react';\nimport './App.scss';\nimport AppRouter from './AppRouter';\nimport AppSnackbar from \"./AppSnackbar\";\nimport Settings from '../Settings/Settings';\n\nfunction App(): JSX.Element {\n  return (\n      <div className=\"app-root\">\n          <AppRouter></AppRouter>\n          <AppSnackbar></AppSnackbar>\n          <Settings></Settings>\n      </div>\n  );\n}\n\nexport default App;\n","import {createTheme} from \"@material-ui/core\";\n\nexport const theme = createTheme({\n    typography: {\n        button: {\n            textTransform: 'none',\n            fontFamily: 'SourceSansPro'\n        }\n    },\n    palette: {\n        primary: {\n            main: '#558B2F'\n        },\n        secondary: {\n            main: '#AD1457'\n        }\n    }\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport snackbarReducer from './actions/snackbar';\nimport settingsReducer from \"./actions/settings\";\n\nexport const store = configureStore({\n    reducer: {\n        snackbar: snackbarReducer,\n        settings: settingsReducer\n    },\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport {theme} from \"./utils/theme\";\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <MuiThemeProvider theme={theme}>\n                <App />\n            </MuiThemeProvider>\n        </Provider>\n    </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}